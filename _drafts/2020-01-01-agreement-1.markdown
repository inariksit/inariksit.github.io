---
layout: post
title:  "Generalising agreement: part I"
date:   2010-01-01
categories: gf
tags: "gf linguistics"
---

Lately I've been thinking about verbal agreement in various GF resource grammars.

This will be a series of three posts. (I publish this plan so that I will feel the pressure to actually write them.)
The first post---this one---is an introduction to verbal agreement, most useful for a reader with little knowledge in linguistics or GF. The second post will be about implicit arguments: how do we model the real world adding all kinds of inconvenient restrictions on how we speak. In the third post I will talk about obliques and how, if you squint enough, you can kind of interpret preposition contraction and other unrelated things as agreement!

If you're a seasoned GF grammarian and have any familiarity with linguistics, the first post won't be all that new information, but you surely wouldn't want to miss my hot takes on ergativity. If you don't know what ergativity means, that's a sign that you need to read the first post.

- [Agreement in linguistics](#agreement-in-linguistics)
- [No person marking](#no-person-marking)
- [1-dimensional person marking](#1-dimensional-person-marking)
  * [Subject marking](#subject-marking)
  * [Object marking](#object-marking)
  * [Object marking: another option for intransitive verbs](#object-marking--another-option-for-intransitive-verbs)
  * [Subject *or* object: Differential argument marking](#subject--or--object--differential-argument-marking)
- [Interlude: Nominative-accusative vs. Ergative-absolutive alignment](#interlude--nominative-accusative-vs-ergative-absolutive-alignment)
  * [Nominative-accusative alignment](#nominative-accusative-alignment)
  * [Ergative-absolutive alignment](#ergative-absolutive-alignment)
  * [Terminology notes](#terminology-notes)
- [2-dimensional person marking](#2-dimensional-person-marking)
  * [Nominative-accusative: Hungarian](#nominative-accusative--hungarian)
  * [Ergative-absolutive: Basque](#ergative-absolutive--basque)
- [Read more](#read-more)
- [Footnotes](#footnotes)


## Agreement in linguistics

Verbal agreement means that one or more of the verb's arguments are marked in the verb form. If you're not familiar with other languages than Standard Average European, you've probably only seen subject agreement:

 &nbsp;          |1st person singular | 3rd person singular
-----------------|----------------|---------------------------
**Intransitive** |<font color="green">I</font> sleep-<strong><font color="green">∅</font></strong>       | <font color="green">the cat</font> sleep<strong><font color="green">s</font></strong>
**Transitive**   |<font color="green">I</font> drink-<strong><font color="green">∅</font></strong> water | <font color="green">the cat</font> drink<strong><font color="green">s</font></strong> water
-----------------|----------------|---------------------------

Both verbs, *sleep* and *drink*, only show marking for the subject: null morpheme (marked as -∅) for *I*, and -s for *the cat*. *Water*, which is the object of *drink*, doesn't contribute to the conjugation. Contrast this with Hungarian [[Wikipedia](https://en.wikipedia.org/wiki/Hungarian_verbs#Definite_and_indefinite_conjugations)]:

<img src="/images/hungarian-agreement.png" alt="Screenshot of Wikipedia. The text reads: In Hungarian, verbs not only show agreement with their subjects but also carry information on the definiteness of their direct objects. This results in two types of conjugations: definite (used if there is a definite object) and indefinite (if there is no definite object" />

In fact, multiple agreement is pretty common in languages around the world. The map below is taken from [World Atlas of Language Structures](https://wals.info/) (WALS): red dot means "like English", orange dot means "like Hungarian".

<a id="person-marking-wals" href="https://wals.info/feature/102A?v3=cff0&v1=cfff&v0=cfff&v2=cd00&v4=cffc&v5=cfc0#2/30.8/170.6"><img src="/images/person-marking-wals.png" /></a>

<!-- > Verbal person marking of just the A [agent] is most common in Eurasia. It is characteristic of most of the Indo-European languages of Europe, the Uralic languages of Russia, Finland, Estonia and Hungary, the Turkic languages, and the Dravidian languages of India. It is also found in eastern Africa, especially among the Afro-Asiatic languages, in the north of South America and in New Guinea. By contrast, it is extremely rare in North America and there is no instance of it among the languages in the sample in Australia. Verbal person marking of just the P [object] is an infrequent phenomenon everywhere. -->

Now I'll present different options for argument marking, and how to do them in GF.

For simplicity, I'm only showing positive present indicative forms. You can freely assume, in addition to person marking, some form of tense, aspect, mood, polarity etc.

## No person marking

The simplest person marking is no person marking. In the WALS map you've just seen, languages without verbal person marking are shown with white dots.

Here's what an inflection table looks like in Chinese:

```haskell
lincat
  V,V2 = {s : Str} ;

lin
  sleep_V  = {s = "睡觉"} ;

  drink_V2 = {s = "喝"} ;
```

Of course, languages without person marking in the verb are perfectly capable of expressing who does what.
Presence or absence of person marking doesn't imply anything about the overall morphological complexity of the language:
e.g. Japanese verbs mark tons of other things, just not person.

## 1-dimensional person marking

Moving on to higher dimensions.
The verb can mark *one* of its core arguments---shown by the yellow and red dots on [the previous map](#person-marking-wals).
The marked argument can be consistent, i.e. always the subject or object, or it may depend on more complex criteria.

### Subject marking

Let's use English as an example of subject marking:

```haskell
param
  Agr = Sg3 | Other ;

lincat
  V,V2 = {s : Agr => Str} ;

lin
  sleep_V  = {s = table { Sg3   => "sleeps" ;
                          Other => "sleep" }} ;

  drink_V2 = {s = table { Sg3   => "drinks" ;
                          Other => "drink" }} ;
```

So far we have only created an inflection table---nothing in the code says that we have *subject* marking, just that we have one-dimensional table. But when we add lincats and linearisations for `VP` and `Cl`, it will become apparent which argument the verb marks. The following GF code models English (and other red dots on the WALS map):

#### GF grammar for English

```haskell
-- English
lincat
  V,
  V2,
  VP = {s : Agr => Str} ;
  NP = {s : Str ; a : Agr} ;
  Cl = {s : Str} ;

lin
  -- UseV : V -> VP
  UseV v = v ;

  -- ComplV2 : V2 -> NP -> VP
  ComplV2 v2 np = {s = \\agr => v2.s ! agr ++ np.s} ;

  -- PredVP : NP -> VP -> Cl
  PredVP np vp = {s = np.s ++ vp.s ! np.a} ;
```

### Object marking

Now, let's implement the missing categories and functions for a language that marks only object, not subject.  According to WALS, this is quite rare but not unheard of; 24 languages of the sample of 378 do that. (They are shown as yellow dots on [the previous map](#person-marking-wals).)

To keep it simple, let's assume that there is a language just like English but object marking.

|Transitive         |Sg1 subject | Sg3 subject  |
|:-----------------:|:----------|:--------------------------|
|**Sg1 object**   |I drink-<strong><font color="purple">∅</font></strong> <font color="purple">me</font> | the cat drink-<strong><font color="purple">∅</font></strong> <font color="purple">me</font> |
|**Sg3 object**   |I drink<strong><font color="purple">s</font></strong> <font color="purple">water</font> | the cat drink<strong><font color="purple">s</font></strong> <font color="purple">water</font> |
|-----------------|----------------|---------------------------|

You see, "I drink<b>s</b> water" would be ungrammatigal in ordinary English, where verbs mark the subject. In contrast, Like-English-but-object-marking puts the -s in *I drinks water* because of *water*, not because of *I*.

Now, the WALS data doesn't tell me what do these 24 languages mark in an intransitive verb, so I decide that in Like-English-but-object-marking, intransitives have no person marking. (There are other options---more on those later!)


| Intransitive    |Sg1 subject | Sg3 subject |
|:---------------:|:----------|:--------------------------|
| &nbsp;          | I sleep-<strong>∅</strong> | the cat sleep-<strong>∅</strong> |
|-----------------|----------------|---------------------------|

#### GF grammar for Like-English-but-object-marking

```haskell
-- Like English but object-marking
lincat
  V, VP = {s : Str} ;
  V2 = {s : Agr => Str} ;
  NP = {s : Str ; a : Agr} ;
  Cl = {s : Str} ;

lin
  -- UseV : V -> VP
  UseV v = v ;

  -- ComplV2 : V2 -> NP -> VP
  ComplV2 v2 np = {s = v2.s ! np.a ++ np.s} ;

  -- PredVP : NP -> VP -> Cl
  PredVP np vp = {s = np.s ++ vp.s} ;
```

Let's look at the lexical categories, `V` and `V2`. The easy case first: `V2` is still an inflection table `Agr => Str`, only this time `Agr` marks the object. In contrast, the lincat for `V` doesn't need a table, just a string!

This change is reflected in `VP`. It's clear when you look how to construct a VP: either from a `V`, which never inflected, or from a `V2` and a object---just what is needed to pick out the correct form from the `V2`. In turn, `PredVP` is just trivial concatenation, because the subject doesn't contribute anything to the verb inflection.

<!--
In English, `VP` needs to retain its potential for agreement, and only `PredVP` can pick out a string, because that's when the subject is added. In Like-English-but-…, we get rid of the incertainty already at `ComplV2`, and adding subject is just trivial concatenation. -->

<!-- Compare `ComplV2` and `PredVP` in English and Like-English-but-object-marking:

```haskell
-- English
ComplV2 v2 np = {s = \\agr => v2 ! agr ++ np.s} ;

-- Like-English-but-…
ComplV2 v2 np = {s = v2.s ! agr ++ np.s} ;
```

```haskell
-- English
PredVP np vp = {s = np.s ++ vp.s ! np.a} ;

-- Like-English-but-…
PredVP np vp = {s = np.s ++ vp.s} ;
```

Pretty cool right? -->


### Object marking: another option for intransitive verbs

Previously we just had zero marking for intransitive verbs. But there is another strategy that appears in some languages[^1]:
* For transitive verbs, mark the object in the verb.
* For intransitive verbs, mark the subject *in the same way* the object is marked for transitive verbs.

(There is a name for this and I will introduce it soon. Let's just finish our Like-English-but-… series!)

We established already how transitive verbs work:

 |Transitive       |Sg1 subject         | Sg3 subject                     |
 |:---------------:|:-------------------|:--------------------------------|
 |**Sg1 object**   |I drink-<strong><font color="purple">∅</font></strong> <font color="purple">me</font>    | the cat drink-<strong><font color="purple">∅</font></strong> <font color="purple">me</font>          |
 |**Sg3 object**   |I drink<strong><font color="purple">s</font></strong> <font color="purple">water</font> | the cat drink<strong><font color="purple">s</font></strong> <font color="purple">water</font>     |
 |-----------------|--------------------|---------------------------------|

Now let's add intransitive verbs. As you can see, a transitive verb is marked with an <b>-s</b>, when its object is a 3rd person singular NP. Logically then, an intransitive verb will be marked with <b>-s</b>, when its *subject* is a 3rd person singular NP.

The same logic holds for 1st person. A transitive verb is unmarked, when its object is a 1st person singular NP (*me*). When *me* is a subject of an intransitive verb like *sleep*, then that verb should also be unmarked.

Yes, the subject case for an intransitive verb is now *me*---*I* is reserved for transitive verbs.


 | Intransitive    | Sg1 subject   | Sg3 subject         |
 |:---------------:|:--------------|:--------------------|
 | &nbsp;          | <font color="purple">me</font> sleep-<strong><font color="purple">∅</font></strong> | <font color="purple">the cat</font> sleep<strong><font color="purple">s</font></strong> |
 |-----------------|---------------|---------------------|

However, I have ignored NP case so far in my GF examples, and I continue ignoring it. (Apologies if you got excited about novel subject cases!) One thing at a time, and now we're looking at verbal agreement.


<!-- Now, in this post I'm mostly concerned about verbal agreement, but for a proper "mark the subject in the same way as the object" strategy, we should also keep in mind the case marking. In a typical language that uses such a strategy, *I* is reserved only for the doer of a transitive verb, and *me* is both the object of a transitive verb and the subject of an intransitive verb. So this looks more consistent:

| Intransitive    | Sg1 subject    | Sg3 subject         |
|:---------------:|:---------------|:--------------------|
| &nbsp;          | me sleep-<strong><font color="green">∅</font></strong> | the cat sleep-<strong><font color="purple">s</font></strong> |
|-----------------|----------------|---------------------| -->

#### GF grammar for Like-English-but-object-marking-ERG

I realise that the names of my invented languages are getting quite unwieldy. So let's just call them LEBOM (Like-English-but-object-marking) and LEBOM-ERG, for reasons that will become obvious soon.

```haskell
-- LEBOM-ERG
lincat
  V, V2, VP = {s : Agr => Str} ;
  NP = {s : Str ; a : Agr} ;
  Cl = {s : Str} ;

lin
  -- UseV : V -> VP
  UseV v = v ;

  -- ComplV2 : V2 -> NP -> VP
  ComplV2 v2 np = {s = \\_ => v2.s ! agr ++ np.s} ;

  -- PredVP : NP -> VP -> Cl
  PredVP np vp = {s = np.s ++ vp.s ! np.a} ;
```

We're back to `{s : Agr => Str}` for all verbal categories. Unlike LEBOM, where intransitive verbs had always zero marking, in LEBOM-ERG all verbs have some marking, it just varies *for which argument*. So both `V` and `V2` need an inflection table.

Because `V` needs a subject to know the correct form, `VP` needs to be an inflection table too. Just looking at `UseV` and `PredVP`, they are exactly like in [ordinary English](#gf-grammar-for-english).

In contrast, `ComplV2` has a different behaviour: it picks out the right form of the `V2` already when forming a `VP`, using the object's agreement. But `VP` still needs a table, that's how GF works. So we put the chosen form in a dummy inflection table: all left-hand sides lead to that form.

### Subject *or* object: Differential argument marking

Who says you need to do your argument marking based on its *role*? Instead, you can mark based on something inherent in the argument.

For instance, if a transitive verb has one animate and one inanimate argument, mark the verb based on the animate argument, regardless or their roles. In the following examples, the verb *write* agrees with its animate argument whenever it has one.

|  Animate > Inanimate      |Sg1 subject            | Sg3 subject                     |
|:---------------:|:----------------------|:--------------------------------|
|**Sg1 object**   |<font color="999898">I write-∅ me</font>       | the blog write-<strong><font color="purple">∅</font></strong> <font color="purple">me</font>         |
|**Sg3 object**   |<font color="green">I</font>  write-<strong><font color="green">∅</font></strong> the blog | <font color="999898">the blog write<b>s</b> the blog</font>   |


If there are two animate arguments, they can be ordered by person hierarchy, such as 1st > 2nd > 3rd. Here's an example, where *love* agrees with the argument that is highest in the person hierarchy:

| P1 > P2 > P3    | P2 subject         | P3 subject          |
|:---------------:|:-------------------|:--------------------|
|**P2 object**    |<font color="999898">you love-<b>∅</b> you</font>  | he love-<strong><font color="purple">∅</font></strong> <font color="purple">you</font>    |
|**P3 object**    |<font color="green">you</font> love-<strong><font color="green">∅</font></strong> him  | <font color="999898">he love<b>s</b> him</font>   |


Now, I think you've seen enough GF code that you should be able to do this on your own!

I have created a repository at [github.com/inariksit/gf-agreement-tutorial](https://github.com/inariksit/gf-agreement-tutorial), which contains examples to this post and the following posts.

In the directory [like-english-but](https://github.com/inariksit/gf-agreement-tutorial/tree/master/like-english-but#readme),
you find a complete abstract syntax and finished concrete syntaxes for English, LEBOM and LEBOM-ERG. However, Like-English-but-differential-argument-marking (LEBDAM) is just a dummy concrete syntax, so you have a chance to implement it properly.

Some instructions:

* Intransitive verbs mark their only argument.
* You will need to modify the `NP` category (and obviously all verbal categories). However, you can still ignore case in `NP`: *you love he* and *the blog write I* are acceptable output, if you only want to concentrate on person marking in the verb.
* You don't need to use animacy or person hierarchy---you can make your system as wild as you want, as long as you can encode it in GF.

If you want feedback, make your solution available to me! You can make a pull request on GitHub or send your code to [inari.listenmaa@gmail.com](mailto:inari.listenmaa@gmail.com).

<!-- This offer does not expire; as long as this paragraph is still online, I'll be happy to get answers. -->

_____

And we're done with 1-dimensional agreement! If I have missed something, please let me know. If it's about, say, case or clitics or adpositions or word order or wearing a cowboy hat to mark an argument, I'll be even more interested in it for the 3rd post. There's no time limit, even if you're reading this when I have published the 3rd part (so like 2027), a blog post can always be edited.

Soon we will go on to 2-dimensional agreement. But before that, I need to introduce properly "the other strategy" for the alignment of argument marking, which was used in LEBOM-ERG.

## Interlude: Nominative-accusative vs. Ergative-absolutive alignment

So far I've used the term *subject* for two things: the only argument of an intransitive verb (*<b>subject</b> sleeps*), and the doer argument of a transitive verb (*<b>subject</b> eats object*).

Now, let's make the definitions a bit narrower. With __<font color="orange">subject</font>__, we refer to the only argument of an intransitive verb, whereas transitive verbs have an __<font color="green">agent</font>__ and a __<font color="purple">object</font>__ (also called *<font color="purple">patient</font>*[^2]). Like this:

<ul>
<li><span title="SUBJECT"><strong><font color="orange">the cat</font></strong></span> sleeps</li>
<li><span title="AGENT"><strong><font color="green">the cat</font></strong></span> eats <span title="OBJECT"><strong><font color="purple">the mouse</font></strong></span></li>
</ul>

With these three roles, we have four reasonable[^3] strategies of marking them. This is called the *alignment* of argument marking.
<ol>
  <li>All same:
    <ul>
    <li><span title="SUBJECT"><strong><font color="grey">subject</font></strong></span> sleep</li>
    <li><span title="AGENT"><strong><font color="grey">agent</font></strong></span> eat <span title="OBJECT"><strong><font color="grey">object</font></strong></span></li>
    </ul>
  </li>
  <li>Subject and agent same, object different:
    <ul>
    <li><span title="SUBJECT"><strong><font color="green">subject</font></strong></span> sleeps</li>
    <li><span title="AGENT"><strong><font color="green">agent</font></strong></span> eats <span title="OBJECT"><strong><font color="purple">object</font></strong></span></li>
    </ul>
  </li>
  <li>Subject and object same, agent different:
    <ul>
    <li><span title="SUBJECT"><strong><font color="purple">subject</font></strong></span> sleeps</li>
    <li><span title="AGENT"><strong><font color="green">agent</font></strong></span> eats <span title="OBJECT"><strong><font color="purple">object</font></strong></span></li>
    </ul>
  </li>
  <li>All different:
    <ul>
    <li><span title="SUBJECT"><strong><font color="orange">subject</font></strong></span> sleeps</li>
    <li><span title="AGENT"><strong><font color="green">agent</font></strong></span> eats <span title="OBJECT"><strong><font color="purple">object</font></strong></span></li>
    </ul>
  </li>
</ol>

Strategy #2 is called __nominative-accusative__ alignment, and strategy #3 is called __ergative-absolutive__ alignment.

Where do the names come from? All four---nominative, accusative, absolutive and ergative---are originally nominal cases, used to mark the arguments.
However, a language doesn't need to have cases in order to implement one of the strategies; there are lots of ways to treat arguments "same" or "different" that don't involve case! I'll rant about the names later, now let's look at both alignment strategies in detail.


### Nominative-accusative alignment

In languages such as English, nominative is the case which you use for subject and agent: *<font color="green">she</font> drinks water*, *<font color="green">she</font> sleeps*. Accusative is used for the object: *you see <font color="purple">her</font>*. So&nbsp;that's why the whole alignment strategy is called nominative-accusative.

To shorten a bit, they are often called "nominative-accusative languages", and to shorten even more, just "accusative languages"---named after the more <span title="Wikipedia: “markedness is the state of standing out as unusual or divergent in comparison to a more common or regular form. In a marked–unmarked relation, one term of an opposition is the broader, dominant one. The dominant default or minimum-effort form is known as unmarked; the other, secondary one is marked. In other words, markedness involves the characterization of a ‘normal‘ linguistic unit against one or more of its possible ‘irregular‘ forms.“">[marked](https://en.wikipedia.org/wiki/Markedness)</span> argument.

Keep in mind that no single feature of the picture below is *necessary* alone, they are just common tendencies.

<!--

So that's already lots of assumptions in a name: that the language marks the arguments with certain cases, and which of the cases is marked.
Here's a cluster of common features -->


<img src="/images/nom-acc-common-features.png" />

<!-- Let's imagine a language that has no nominal nor verbal morphology and word order is determined by throwing a die. But the speakers consistently put on a cowboy hat when uttering the agent and subject, and a pirate hat when uttering the object. Such a language is also a nominative-accusative language. -->

### Ergative-absolutive alignment

In languages such as Basque, the subject of an intransitive verb and the object of a transitive verb are marked with a case called *absolutive*.

<ul>
 <li><font color="purple">Ni</font>  naiz<br/>
     <em><font color="purple">I</font>  am</em>
  </li>
</ul>
<ul>
 <li> Inarik <font color="purple">ni</font> nauka  <br/>
      <em>Inari has <font color="purple">me</font ></em>   </li>
</ul>

See how the first <font color="purple">ni</font> is translated as *I*, and second as *me*. That's absolutive case in action. In contrast, the <b>-k</b>  after Inari (that's my name, not some obscure Basque word), that's the marker for ergative case.

Let's translate now "Inari is" and "I have Inari":

 * Inari  da  
   *Inari is*
<ul>
<li><font color="green">Nik</font> Inari daukat <br/>
   <em><font color="green">I</font> have Inari</em>
</li>
</ul>

Pretty solid ergative-absolutive alignment from the NPs! Notice also how the verb indexes the absolutive argument (S or O): <b>n</b>aiz and <b>n</b>auka for 1st person singular, <b>d</b>a and <b>d</b>aukat for 3rd person singular. If you just looked at the translations of "Inari is" and "Inari has me", you wouldn't find any similarities in the verb forms, *da* and *nauka*.

Languages that behave like this are called "ergative-absolutive languages", or "absolutive-ergative languages". (Why the two orders? *Ergative-absolutive* mimics nominative-accusative in that the agent case comes first, and *absolutive-ergative* in that the unmarked case comes first.) However, everyone agrees on the short name, "ergative languages"---again, named after the marked case.

<img src="/images/abs-erg-common-features.png" />


### Terminology notes

As you've seen, these terms conflate features from nominal morphology, verbal person marking and even syntax, whereas in the real world, they don't *need* to appear in just those combinations.

For example, Somali is a nominative-accusative language with a marked subject case and unmarked object case. The name "accusative" means "marked object case", so technically Somali's object case isn't an accusative (well, and a few other reasons which this margin is too narrow to contain). Despite Somali not having *accusative* as a nominal case, it still is a *nominative-accusative* language as for its person marking alignment.

So if you're new to linguistics, try not to get confused! To finish this digression, here's an absurd example to remind you that despite the names, person marking alignment doesn't need to rely on cases.

<!-- If I were to design the names from scratch, I'd unpack the assumptions---but the names are well established, so better learn them as they are used.
Just to drill my point, here's an absurd example of two languages, which implement none of the common features in the previous pictures, but are nevertheless examples of nominative-accusative and ergative-absolutive alignment.
-->
<img src="/images/alignment-absurd-example.png" />


<!-- * For the record, there are also nominative-accusative languages with a marked nominative. You might see them called "nominative-absolutive" (or maybe I'm just reading overly confusing grammars at my spare time.) But if we're just interested in alignment, the relevant test is to compare agents and subjects: are they both marked in *the same way*? If yes, then you have a nominative-accusative system where nominative is the marked one and accusative is the unmarked one.
* The same goes if you see a combination like "ergative-genitive". -->



## 2-dimensional person marking

Back to the regularly scheduled program!
<!-- We're ready to move on to 2-dimensional agreement. -->
By now you're surely tired of pretending that English has morphology, so we're graduating from *Like-English-but-…* to actual languages.

I will show one nominative-accusative language, and one ergative-absolutive language---not because there is a huge difference, but rather because there isn't.
<!-- The lincats of `V`, `V2` and `VP` are basically identical (as you will see). The implementations of `UseV`, `ComplV2` and `PredVP` need to remember the subject case -->

There are, in fact, fewer possible 2-dimensional systems than 1-dimensional, because we must include both arguments.
For 1-dimensional systems, we had 3 main classes: a) always mark subject, b) always mark object or c) it depends. For 2-dimensional systems, we have one main class, "always mark both", and variation is more fine-grained, like "mark both arguments in the verb inflection, but use a weird case for one of them".

<!-- But now that we have 2-dimensional agreement, it stops being relevant for verbal agreement whether we have ergative-absolutive or nominative-accusative system. When we only had to mark one -->

### Nominative-accusative: Hungarian

Here's a grammar of simplified Hungarian---just enough morphology to illustrate how to deal with 2-dimensional agreement.

```haskell
param
  Agr = Sg1 | Sg2 | Sg3 | Pl1 | Pl2 | Pl3 ;
  Definiteness = Def | Indef ;
  Case = Nom | Acc | Dat ; -- Most cases omitted here

lincat
  V,
  VP = {s :                 Agr => Str} ;
  V2 = {s : Definiteness => Agr => Str ; c2 : Case} ;
  NP = {s : Case => Str ; a : Agr ; d : Definiteness} ;

lin
  sleep_V = {s =
    table { Sg1 => "alszok" ;
            Sg2 => "alszol" ;
            Sg3 => "alszik" ;
            Pl1 => "alszunk" ;
            Pl2 => "alszotok" ;
            Pl3 => "alszanak" }
  } ;

  drink_V2 = {s =
    table { Def => table { Sg1 => "iszom" ;
                           Sg2 => "iszod" ;
                           Sg3 => "issza" ;
                           Pl1 => "isszuk" ;
                           Pl2 => "isszátok" ;
                           Pl3 => "isszák" } ;

            Indef => table { Sg1 => "iszok" ;
                             Sg2 => "iszol" ;
                             Sg3 => "iszik" ;
                             Pl1 => "iszunk" ;
                             Pl2 => "isztok" ;
                             Pl3 => "isznak" }
          }
    } ;

  UseV v = v ;

  ComplV2 v2 np = {s =
    \\subjAgr => v2.s ! np.d ! subjAgr
              ++ np.s ! v2.c2
    } ;

  PredVP np vp = {s = np.s ! Nom ++ vp.s ! np.a} ;
```

Now transitive verbs have inflection tables in two layers, as you can see in `drink_V2`. The first choice is made at `ComplV2`, when the verb gets an object.


<div class="language-haskell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">ComplV2</span> <span class="n">v2</span> <span class="n">np</span> <span class="o">=</span> <span class="p">{</span><span class="n">s</span> <span class="o">=</span>
  <span class="o">\\</span><span class="n">subjAgr</span> <span class="o">=&gt;</span> <span class="n">v2</span><span class="o">.</span><span class="n">s</span> <span class="o">! np.d</span> <span class="o">!</span> <span class="n">subjAgr</span>
            <span class="o">++</span> <span class="n">np</span><span class="o">.</span><span class="n">s</span> <span class="o">!</span> <span class="n">v2</span><span class="o">.</span><span class="n">c2</span>
  <span class="p">}</span> <span class="p">;</span>
</code></pre></div></div>

The second choice is made in `PredVP`, when the verb gets a subject:

<div class="language-haskell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">PredVP</span> <span class="n">np</span> <span class="n">vp</span> <span class="o">=</span> <span class="p">{</span><span class="n">s</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">s</span> <span class="o">!</span> <span class="kt">Nom</span> <span class="o">++</span> <span class="n">vp</span><span class="o">.</span><span class="n">s</span> <span class="o">! np.a</span><span class="p">}</span> <span class="p">;</span>
</code></pre></div></div>

If these were in one function, you would notice the pattern more clearly. If we add a function that takes a subject and the object at the same time, then it would look like this:

```haskell
-- MakeSentence : NP -> V2 -> NP -> S ;
MakeSentence subj verb obj = subj.s ! Nom
                          ++ verb.s ! obj.d ! subj.a
                          ++ obj.s ! verb.c2 ;
```

As usual, there is runnable code for this little exercise grammar at [github.com/inariksit/gf-agreement-tutorial](https://github.com/inariksit/gf-agreement-tutorial/blob/master/2-dimensional/AgreementHun.gf). The actual grammar is quite different from this blog post, because I implemented a few things unrelated to verbal agreement, and moved some things to opers.

### Ergative-absolutive: Basque

This is the final example of this blog post: a simplified version of Basque transitive verbs. (Home assignment is to implement Basque *ditransitive* verbs!)

```haskell
param
  Agr = Sg1 | Sg2 | Sg3 | Pl1 | Pl2 | Pl3 ;
  Case = Abs | Erg ; -- Most cases omitted here

lincat
  NP = {s : Case => Str ; a : Agr} ;

  VP = {s :        Agr => Str ; sc : Case} ; -- subj/agent case
  V  = {s :        Agr => Str} ;
  V2 = {s : Agr => Agr => Str} ;
```

`V` and `V2` are just like in Hungarian: `V2` becomes `V` by peeling off the outer layer of object agreement. However, `VP` needs something extra due to ergativity: namely, the case of its future subject/agent. Trees don't track their origin automatically, so without the parameter `sc`, the VP wouldn't know if it came from an intransitive verb (via `UseV`) or a transitive verb (via `ComplV2`), and hence whether it has a *subject* or an *agent*.

Next, let me show some verbs in action. The real code is at the usual place and will be linked later, let's just imagine for a moment that allomorphs and stem changes don't exist. The code below produces forms like *lo egin gara* 'we sleep', *edan dituzu* 'you drink them', *edan zaitut* 'I drink you' and so forth.

```haskell
lin
  sleep_V = {
    s = \\subj => "lo egin" ++ case subj of {
                      Sg1 => "naiz" ; Pl1 => "gara" ;
                      Sg2 => "zara" ; Pl2 => "zarete" ;
                      Sg3 => "da"   ; Pl3 => "dira" }
    } ;

  drink_V2 = {s =
    \\obj,ag => "edan" ++ (prefix ! obj + suffix ! ag) ;
  } where {
      prefix : Agr => Str = table {
        Sg1 => "nau"   ; Pl1 => "gaitu" ;
        Sg2 => "zaitu" ; Pl2 => "zaituzte" ;
        Sg3 => "du"    ; Pl3 => "ditu" } ;

      suffix : Agr => Str = table {
        Sg1 => "t"  ; Pl1 => "gu" ;
        Sg2 => "zu" ; Pl2 => "zue" ;
        Sg3 => []   ; Pl3 => "te" } ;
    } ;
```

Finally, the syntactic functions look as follows.

```haskell
UseV v = v ** {
  sc = Abs ; -- Comes from V, has absolutive subject
  } ;

ComplV2 v2 np = {
  s = \\agAgr => np.s ! Abs ++ v2.s ! np.a ! agAgr ;
  sc = Erg ; -- Comes from V2, has ergative agent
  } ;

PredVP np vp = {
  s = np.s ! vp.sc ++ vp.s ! np.a ;
  } ;
```

Nothing exciting to see. `ComplV2` picks the right object agreement in v2 and leaves the agent open. `PredVP` completes the job and picks the right form, now that it has an agent. It also picks the right case from the NP, using the VP's `sc` field. Thus we get the following sentences:

```
Agreement: PredVP i_NP (UseV sleep_V)  
AgreementEus: ni lo egin naiz  

Agreement: PredVP i_NP (ComplV2 drink_V2 water_NP)  
AgreementEus: nik ura edan dut
```

If you read through the interlude expecting some mindblowing grammar tricks due to ergativity, you'll be disappointed. The only thing we did was to add a subject case to VP, but that's what we do in other languages as well. In the [actual Hungarian implementation](https://github.com/inariksit/gf-agreement-tutorial/blob/master/2-dimensional/AgreementHun.gf) I have added a verb that takes its subject in dative. (Well, the difference is that the subject case is present already in the *verb*, not just VP.)

So, now you can go and check out the [full grammar for Basque](https://github.com/inariksit/gf-agreement-tutorial/blob/master/2-dimensional/AgreementEus.gf)! If you get bored when waiting for the next posts, you can always take up the challenge of implementing ditransitive verbs, with their 3-dimensional agreement.

<!-- ## 3-dimensional marking

Remember when I said a while back that that was the last example? I intend to keep my promise, so this is left as a homework. You can complete the Basque into its proper 3-dimensional glory.

```haskell
param
  Agr = Sg1 | Sg2 | Sg3 | Pl1 | Pl2 | Pl3 ;
  IndirObj = SgObj | PlObj ;

lincat
  V  = {s :                    Agr => Str} ;
  V2 = {s :             Agr => Agr => Str} ;
  V3 = {s : IndirObj => Agr => Agr => Str} ;
```

https://upload.wikimedia.org/wikipedia/commons/3/36/Nor_Nori_Nork_taula_osoa.png

Let's start from the order of the arguments.

<!--Also, the fact that Basque is ergative-absolutive is actually not at all interesting from verb inflection perspective. We need to mark both, so the argument marking strategy doesn't bring anything new to the verbs, unlike Like-English-but-object-marking-and-ergative, which was an exciting and novel way of inflecting English verbs.-->



## Read more

* WALS article about person marking: [wals.info/chapter/102](https://wals.info/chapter/102)
* WALS article about alignment of person marking: [wals.info/chapter/100](https://wals.info/chapter/100)

## Footnotes

[^1]: In case you're wondering what "some languages" means, here's a WALS map. Pink shapes are different varieties of the strategy *mark transitive object same as intransitive subject* (at least some of the time).<a href="https://wals.info/feature/100A?v1=dffc&v0=dfff&v5=tf6f&v3=ff6f&v2=cfff&v4=sf6f&v6=cf6f#2/16.6/148.9"><img src="/images/alignments-wals.png" alt="Another world map from WALS" /></a>

[^2]: Sometimes you see the whole trio called by semantic rather than syntactic roles: <strong><font color="orange">experiencer</font></strong> sleeps, and <strong><font color="green">agent</font></strong> eats <strong><font color="purple">patient</font></strong>. A&nbsp;common combination is Subject, Agent and Patient. In this post, I use *object* instead of *patient*, because I want to introduce as little new terminology as possible. But if you e.g. read the WALS articles, it's useful to know what they mean with *patient*, shortened P.<img src="/images/wals-marking.png" width="50%"/>

[^3]: Technically there's a 5th alternative; subject is different but agent and object are the same. But it would be strange to spend precious morphemes on just the case where it doesn't make a difference (intransitive subject vs. both transitive arguments) and then not spend them where it is actually important.
